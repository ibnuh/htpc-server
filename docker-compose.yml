version: "3.4"
services:
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=0
      - PGID=0
      - TZ=Asia/Jakarta
      - WEBUI_PORT=8080
    volumes:
      - ${CONFIG_ROOT}/qBittorrent:/config
      - ${DOWNLOAD_ROOT}/downloads:/downloads # downloads folder
    restart: unless-stopped
    network_mode: host

  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${DOWNLOAD_ROOT}/downloads:/downloads # downloads folder
      - ${CONFIG_ROOT}/delugev2:/config # config files
    network_mode: host

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOWNLOAD_ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${CONFIG_ROOT}/jackett:/config # config files

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/sonarr:/config # config files
      - ${DOWNLOAD_ROOT}/complete/tv:/tv # tv shows folder
      - ${DOWNLOAD_ROOT}/downloads:/downloads # download folder

  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/lidarr:/config # config files
      - ${DOWNLOAD_ROOT}/complete/music:/music # tv shows folder
      - ${DOWNLOAD_ROOT}/downloads:/downloads # download folder

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/radarr:/config # config files
      - ${DOWNLOAD_ROOT}/complete/movies:/movies # movies folder
      - ${DOWNLOAD_ROOT}/downloads:/downloads # download folder
      - ${DOWNLOAD_ROOT}/complete/misc:/misc # download folder

  plex-server:
    container_name: plex-server
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ} # timezone, defined in .env
    network_mode: host
    volumes:
      - ${CONFIG_ROOT}/plex/db:/config # plex database
      - ${CONFIG_ROOT}/plex/transcode:/transcode # temp transcoded files
      - ${DOWNLOAD_ROOT}/complete:/data # media library

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${CONFIG_ROOT}/bazarr:/config # config files
      - ${DOWNLOAD_ROOT}/complete/movies:/movies # movies folder
      - ${DOWNLOAD_ROOT}/complete/tv:/tv # tv shows folder

  samba:
    container_name: samba
    image: dperson/samba
    environment:
      - TZ=${TZ}
    network_mode: host
    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    stdin_open: true
    tty: true
    volumes:
      - ${DOWNLOAD_ROOT}/complete:/mnt:z
      - /home/${SAMBA_USERNAME}:/${SAMBA_USERNAME}:z
      - ${DOWNLOAD_ROOT}:/gg:z
    command: '-s "${SAMBA_SHARE_ALL};/gg;yes;no;no;${SAMBA_USERNAME}" -s "${SAMBA_SHARE_COMPLETE};/mnt;yes;no;no;${SAMBA_USERNAME}" -s "${SAMBA_SHARE_HOME};/${SAMBA_USERNAME};yes;no;no;${SAMBA_USERNAME}" -u "${SAMBA_USERNAME};${SAMBA_PASSWORD}" -p'

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome:latest
    network_mode: host
    restart: unless-stopped
    volumes:
      - ${CONFIG_ROOT}/adguardhome/work:/opt/adguardhome/work # config files
      - ${CONFIG_ROOT}/adguardhome/conf:/opt/adguardhome/conf # config files

  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:stable
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/homeassistant:/config
    restart: unless-stopped

  file-browser:
    container_name: file-browser
    image: filebrowser/filebrowser
    network_mode: host
    user: 0:0
    restart: unless-stopped
    volumes:
      - ${DOWNLOAD_ROOT}/complete:/srv # downloads folder
      - ${CONFIG_ROOT}/file-browser/filebrowser.db:/database.db # config files

  motioneye:
    image: ccrisan/motioneye:master-amd64
    ports:
      - "8081:8081"
      - "8765:8765"
    volumes:
      - ${DOWNLOAD_ROOT}/motioneye:/etc/motioneye
      - ${CONFIG_ROOT}/motioneye:/var/lib/motioneye
      - /mnt/join/complete/cam:/mnt/cam
